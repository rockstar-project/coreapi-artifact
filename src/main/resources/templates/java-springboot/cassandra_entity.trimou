package {{packageName}};

import com.datastax.driver.core.DataType;
import org.springframework.data.cassandra.mapping.CassandraType;
import org.springframework.data.cassandra.mapping.Column;
import org.springframework.data.cassandra.mapping.PrimaryKey;
import org.springframework.data.cassandra.mapping.Table;


{{#definition}}
{{#dateTimeType}}
import org.joda.time.DateTime;
{{/dateTimeType}}
{{#dateType}}import org.joda.time.LocalDate;{{/dateType}}
{{#floatType}}import java.math.BigDecimal;{{/floatType}}
import java.io.Serializable;
import java.util.UUID;

@Table(value="{{camelcaseToUpperSnakecase name}}")
public class {{capitalize name}} implements Serializable{

    @PrimaryKey
    @CassandraType(type = DataType.Name.UUID)
    private UUID id;
    
    {{#primitiveOrObjectFields}}
	@Column(value="{{camelcaseToUpperSnakecase name}}")
	private {{#stringType}}String{{/stringType}}{{#booleanType}}Boolean{{/booleanType}}{{#integerType}}Integer{{/integerType}}{{#doubleType}}Double{{/doubleType}}{{#dateTimeType}}DateTime{{/dateTimeType}}{{#dateType}}LocalDate{{/dateType}}{{#objectType}}{{capitalize name}}{{/objectType}} {{camelcase name}};
	
	{{/primitiveOrObjectFields}}
    
    public {{capitalize name}}() {
    		this.id = UUID.randomUUID();
	}
	
	public UUID getId() {
        return id;
    }

    public void setId(UUID id) {
        this.id = id;
    }
    
    {{#primitiveOrObjectFields}}
	public {{#stringType}}String{{/stringType}}{{#booleanType}}Boolean{{/booleanType}}{{#integerType}}Integer{{/integerType}}{{#doubleType}}Double{{/doubleType}}{{#dateTimeType}}DateTime{{/dateTimeType}}{{#dateType}}LocalDate{{/dateType}}{{#objectType}}{{capitalize name}}{{/objectType}} get{{capitalizeCamelcase name}}() {
		return this.{{name}};
	}
	public void set{{capitalizeCamelcase name}}({{#stringType}}String{{/stringType}}{{#booleanType}}Boolean{{/booleanType}}{{#integerType}}Integer{{/integerType}}{{#doubleType}}Double{{/doubleType}}{{#dateTimeType}}DateTime{{/dateTimeType}}{{#dateType}}LocalDate{{/dateType}}{{#objectType}}{{capitalize name}}{{/objectType}} {{name}}) {
		this.{{name}} = {{name}};
	}
	
	{{/primitiveOrObjectFields}}
}
{{/definition}}
