package {{packageName}}.services;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import {{packageName}}.MessageListenerApp;
import {{packageName}}.domain.{{capitalize classname}};
import {{packageName}}.repository.{{capitalize classname}}Repository;

@Service
public class {{capitalize classname}}ServiceImpl implements {{capitalize classname}}Service {

    private static final Logger log = LoggerFactory.getLogger({{capitalize classname}}ServiceImpl.class);

    private {{capitalize classname}}Repository {{classname}}Repository;
    private RabbitTemplate rabbitTemplate;

    @Autowired
    public {{capitalize classname}}ServiceImpl({{capitalize classname}}Repository {{classname}}Repository, RabbitTemplate rabbitTemplate) {
        this.{{classname}}Repository = {{classname}}Repository;
        this.rabbitTemplate = rabbitTemplate;
    }

    @Override
    public List<{{capitalize classname}}> listAll() {
        List<{{capitalize classname}}> {{classname}}s = new ArrayList<>();
        {{classname}}Repository.findAll().forEach({{classname}}s::add);
        return {{classname}}s;
    }

    @Override
    public {{capitalize classname}} getById(Long id) {
        return {{classname}}Repository.findOne(id);
    }

    @Override
    public {{capitalize classname}} saveOrUpdate({{capitalize classname}} {{classname}}) {
        {{classname}}Repository.save({{classname}});
        return {{classname}};
    }

    @Override
    public void delete(Long id) {
        {{classname}}Repository.delete(id);

    }
    
    @Override
    public void send{{capitalize classname}}Message(String id) {
        Map<String, String> actionmap = new HashMap<>();
        actionmap.put("id", id);
        log.info("Sending the index request through queue message");
        rabbitTemplate.convertAndSend(MessageListenerApp.SFG_MESSAGE_QUEUE, actionmap);
    }
}
